{"tagline":"Rdio for .NET is an Rdio API web service implentation. It features a full object oriented design and async-await support.","name":"Rdionet","google":"","body":"Rdio for .NET\r\n=============\r\n\r\nRdio for .NET is an Rdio API web service implentation. It features a full object oriented design and async-await support. It's based on .NET 4 and Async Targeting Pack.\r\n\r\n---\r\n\r\nTo start using Rdio for .NET, create a new instance of `RdioClient` with your Rdion consumer credentials and, optionally, the OAuth access token and secret.\r\n\r\n```c#\r\nvar client = new RdioClient(\"consumerKey\", \"consumerSecret\", \"accessToken\", \"accessSecret\");\r\n```\r\n\r\nThe API methods are grouped according to the Rdio API documentation. For example, to call the Get method, you must first access the Core property of the client, where all the Core methods are implemented.\r\n\r\n```c#\r\nvar track = await client.Core.GetAsync<RdioTrack>(\"t2537455\", RdioTrack.Extras.All);\r\nConsole.WriteLine(\"I love {0} by {1}!\", track.Name, track.Artist);\r\n```\r\n\r\nCheck out the `RdioNet.Tests` project for more examples. The tests projects will be improved over the time and more coverage will be added.","note":"Don't delete this file! It's used internally to help with page regeneration."}